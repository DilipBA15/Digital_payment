git init
git remote add origin https://github.com/dilipkumar/myrepo.git

git config --global user.name "Dilip Kumar" // configuration
git config --global user.email "dilip.kumar@example.com" // user email of Git

git add . // To push entire folder on git. 
git add index.html // push the specific file to git. 

git commit -m "<placeholder>"

git push -u origin <branch name> // Push the code System creates a master branch by default. 

user name
password: Use token in password.

Generate Token - setting > Developer settings> Personal access token > fine -grained tokens > new token> all repositories >  permission content (Read and write)



Creating a Separate Branch

main
 └───➤ create branch ➜ login-page
                   ➜ make changes
                   ➜ commit
                   ➜ merge back to main


First come out from Main branch. 

git checkout main

Git checkout -b login-page // create a new branch. 

After making changes save the files. 

git add . 
Git commit -m "<File Name>'

then switch back to main Branch
git checkout main

git merge <file name> 

Push the Merged code to GitHub

Git push origin main

To view all branch - git branch

Delete branch: git branch -d <branch name>
 git push origin --delete <branch-name> Delete a Remote Branch

Hierarchy

GitHub Repository (Remote)
└── Local Repository (on your machine)
    ├── Branches (main, feature-x, bugfix-y)
    │   ├── Project Folder (with Git)
    │   │   ├── Folders (/src, /test)
    │   │   │   └── Files (.java, .html, .json, etc.)

Main Branch is By default

R K colony 

Concept:	When You Use It
File:	Whenever you write or modify code/content
Folder:	To organize your files logically
Project: When starting any new software/product
Repository: To track changes and share code (use git init)
Branch:	To try new features, fix bugs without risk
Main/Master: To maintain stable, production-ready code


This is the new change that I have done in this file only. 